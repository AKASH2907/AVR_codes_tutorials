
12.SSD_0TO9_9TO0_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000112  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000112  00000186  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00000900  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004a7  00000000  00000000  000009a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000180  00000000  00000000  00000e47  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000086b  00000000  00000000  00000fc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001834  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000012a  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cb  00000000  00000000  000019b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macinfo 0000fab7  00000000  00000000  00001a81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00011538  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	00 00       	nop
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	00 00       	nop
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	00 00       	nop
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	00 00       	nop
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	00 00       	nop
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	36 c0       	rjmp	.+108    	; 0x8a <__bad_interrupt>
  1e:	00 00       	nop
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	00 00       	nop
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	00 00       	nop
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	00 00       	nop
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	00 00       	nop
  34:	2a c0       	rjmp	.+84     	; 0x8a <__bad_interrupt>
  36:	00 00       	nop
  38:	28 c0       	rjmp	.+80     	; 0x8a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	26 c0       	rjmp	.+76     	; 0x8a <__bad_interrupt>
  3e:	00 00       	nop
  40:	24 c0       	rjmp	.+72     	; 0x8a <__bad_interrupt>
  42:	00 00       	nop
  44:	22 c0       	rjmp	.+68     	; 0x8a <__bad_interrupt>
  46:	00 00       	nop
  48:	20 c0       	rjmp	.+64     	; 0x8a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1e c0       	rjmp	.+60     	; 0x8a <__bad_interrupt>
  4e:	00 00       	nop
  50:	1c c0       	rjmp	.+56     	; 0x8a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e1       	ldi	r30, 0x12	; 18
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e8       	ldi	r26, 0x80	; 128
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 38       	cpi	r26, 0x80	; 128
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	02 d0       	rcall	.+4      	; 0x8c <main>
  88:	42 c0       	rjmp	.+132    	; 0x10e <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <main>:
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
void main()
{
  8c:	cf 93       	push	r28
  8e:	df 93       	push	r29
  90:	cd b7       	in	r28, 0x3d	; 61
  92:	de b7       	in	r29, 0x3e	; 62
  94:	a0 97       	sbiw	r28, 0x20	; 32
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	f8 94       	cli
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	cd bf       	out	0x3d, r28	; 61
	int n,i,arr[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x5f,0x7c,0x39,0x5e,0x7b,0x79};
  a0:	de 01       	movw	r26, r28
  a2:	11 96       	adiw	r26, 0x01	; 1
  a4:	e0 e6       	ldi	r30, 0x60	; 96
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 e2       	ldi	r24, 0x20	; 32
  aa:	01 90       	ld	r0, Z+
  ac:	0d 92       	st	X+, r0
  ae:	81 50       	subi	r24, 0x01	; 1
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x1e>
	DDRA=DDRA&~1<<0;
  b2:	d0 98       	cbi	0x1a, 0	; 26
	DDRC=0xff;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	84 bb       	out	0x14, r24	; 20
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
void main()
  b8:	9e 01       	movw	r18, r28
  ba:	2f 5f       	subi	r18, 0xFF	; 255
  bc:	3f 4f       	sbci	r19, 0xFF	; 255
  be:	ce 01       	movw	r24, r28
  c0:	45 96       	adiw	r24, 0x15	; 21
	int n,i,arr[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x5f,0x7c,0x39,0x5e,0x7b,0x79};
	DDRA=DDRA&~1<<0;
	DDRC=0xff;
	while(1)
	{
		if(PINA&1<<0)
  c2:	c8 9b       	sbis	0x19, 0	; 25
  c4:	22 c0       	rjmp	.+68     	; 0x10a <main+0x7e>
  c6:	fe 01       	movw	r30, r28
  c8:	31 96       	adiw	r30, 0x01	; 1
		{
			for(i=0;i<=9;i++)
			{
				PORTC=arr[i];
  ca:	40 81       	ld	r20, Z
  cc:	32 96       	adiw	r30, 0x02	; 2
  ce:	45 bb       	out	0x15, r20	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	4f ef       	ldi	r20, 0xFF	; 255
  d2:	59 e6       	ldi	r21, 0x69	; 105
  d4:	68 e1       	ldi	r22, 0x18	; 24
  d6:	41 50       	subi	r20, 0x01	; 1
  d8:	50 40       	sbci	r21, 0x00	; 0
  da:	60 40       	sbci	r22, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x4a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x54>
  e0:	00 00       	nop
	DDRC=0xff;
	while(1)
	{
		if(PINA&1<<0)
		{
			for(i=0;i<=9;i++)
  e2:	e8 17       	cp	r30, r24
  e4:	f9 07       	cpc	r31, r25
  e6:	89 f7       	brne	.-30     	; 0xca <main+0x3e>
  e8:	fc 01       	movw	r30, r24
  ea:	32 97       	sbiw	r30, 0x02	; 2
				_delay_ms(1000);
				
			}
			for(i=9;i>=0;i--)
			{
				PORTC=arr[i];
  ec:	40 81       	ld	r20, Z
  ee:	45 bb       	out	0x15, r20	; 21
  f0:	4f ef       	ldi	r20, 0xFF	; 255
  f2:	59 e6       	ldi	r21, 0x69	; 105
  f4:	68 e1       	ldi	r22, 0x18	; 24
  f6:	41 50       	subi	r20, 0x01	; 1
  f8:	50 40       	sbci	r21, 0x00	; 0
  fa:	60 40       	sbci	r22, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x6a>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x74>
 100:	00 00       	nop
			{
				PORTC=arr[i];
				_delay_ms(1000);
				
			}
			for(i=9;i>=0;i--)
 102:	2e 17       	cp	r18, r30
 104:	3f 07       	cpc	r19, r31
 106:	89 f7       	brne	.-30     	; 0xea <main+0x5e>
 108:	dc cf       	rjmp	.-72     	; 0xc2 <main+0x36>
				_delay_ms(1000);
				
			}
		}
		else
		PORTC=0;
 10a:	15 ba       	out	0x15, r1	; 21
 10c:	da cf       	rjmp	.-76     	; 0xc2 <main+0x36>

0000010e <_exit>:
 10e:	f8 94       	cli

00000110 <__stop_program>:
 110:	ff cf       	rjmp	.-2      	; 0x110 <__stop_program>
